Index: src/services/http.common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\n\r\nconst http =axios.create({\r\n    baseURL: \"http://38.242.222.233:8080\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n\r\n});\r\n\r\nexport default http;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/http.common.js b/src/services/http.common.js
--- a/src/services/http.common.js	(revision f63c078a85b97cc71428e6d481c4aa90f99959cf)
+++ b/src/services/http.common.js	(date 1697111495275)
@@ -1,7 +1,7 @@
 import axios from "axios";
 
 const http =axios.create({
-    baseURL: "http://38.242.222.233:8080",
+    baseURL: "http://localhost:8080",
     headers: {
         "Content-Type": "application/json",
     },
Index: src/services/auth.services.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import http from \"./http.common.js\";\r\nimport axios from \"axios\";\r\nimport getAuthHeaders from \"@/services/auth/auth.header.js\";\r\nconst headers = getAuthHeaders();\r\n\r\n\r\nasync function login(values) {\r\n    return await axios.post(\"http://38.242.222.233:8080/login\", values , { withCredentials: true   , headers:{ \"Content-Type\": \"multipart/form-data\"}} );\r\n}\r\nasync function loadUserByUsername(username , token) {\r\n\r\n    return await http.get(\"/users/loadUsername/\"+username);\r\n}\r\nasync function addUserAdmin(values) {\r\n    return await http.post(\"/users/register/admin\",values,{headers});\r\n}\r\n\r\nasync function addUserByRole(values) {\r\n    return await http.post(\"/users/addRoleToUser\",values,{headers});\r\n}\r\nasync function allUsers() {\r\n    return await http.get(\"/users/\",{headers});\r\n}\r\nasync function disableUser(id) {\r\n    return await http.get(\"/users/disableUser/\"+id,{headers});\r\n}\r\n\r\nasync function unableUser(id) {\r\n    return await http.get(\"/users/unableUser/\"+id,{headers});\r\n}\r\n\r\n\r\nasync function countUsers(values) {\r\n    return await http.get(\"/users/count\",{headers});\r\n}\r\nasync function allUsersAdmin() {\r\n    return await http.get(\"/users/findAdminUsers\",{headers});\r\n}\r\nasync function deleteUser(id) {\r\n    return await http.delete(\"/users/delete/\"+id,{headers});\r\n}\r\nconst AuthService = {login,deleteUser , countUsers,loadUserByUsername,addUserAdmin,allUsersAdmin,disableUser,unableUser};\r\n\r\nexport default AuthService;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/auth.services.js b/src/services/auth.services.js
--- a/src/services/auth.services.js	(revision f63c078a85b97cc71428e6d481c4aa90f99959cf)
+++ b/src/services/auth.services.js	(date 1697204398474)
@@ -5,7 +5,7 @@
 
 
 async function login(values) {
-    return await axios.post("http://38.242.222.233:8080/login", values , { withCredentials: true   , headers:{ "Content-Type": "multipart/form-data"}} );
+    return await axios.post("http://localhost:8080/login", values , { withCredentials: true   , headers:{ "Content-Type": "multipart/form-data"}} );
 }
 async function loadUserByUsername(username , token) {
 
Index: src/services/configuration.services.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\n\r\nasync function config(values) {\r\n    return await axios.post(\"http://38.242.222.233:3001/config\", values  );\r\n}\r\n\r\nconst Configuration = {config};\r\n\r\nexport default Configuration;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/configuration.services.js b/src/services/configuration.services.js
--- a/src/services/configuration.services.js	(revision f63c078a85b97cc71428e6d481c4aa90f99959cf)
+++ b/src/services/configuration.services.js	(date 1697111505914)
@@ -1,7 +1,7 @@
 import axios from "axios";
 
 async function config(values) {
-    return await axios.post("http://38.242.222.233:3001/config", values  );
+    return await axios.post("http://localhost:3001/config", values  );
 }
 
 const Configuration = {config};
